Microsoft Windows [Version 6.3.9600]
(c) 2013 Microsoft Corporation. All rights reserved.

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import
  File "<stdin>", line 1
    import
         ^
SyntaxError: invalid syntax
>>> import random
>>> o = []
>>> for i in range(10):
...     o.append( random.randint(10,100))
...
>>> o
[45, 90, 19, 81, 23, 25, 84, 48, 78, 66]
>>> s = sorted(o)
>>> s
[19, 23, 25, 45, 48, 66, 78, 81, 84, 90]
>>> sorted(o, reverse=True)
[90, 84, 81, 78, 66, 48, 45, 25, 23, 19]
>>> lsw = ['a', 'aaa', 'x', 'xy']
>>> sorted(lsw)
['a', 'aaa', 'x', 'xy']
>>> def p(e):
...     return len(e)
...
>>> sorted(lsw, key=p)
['a', 'x', 'xy', 'aaa']
>>> p('a')
1
>>> p
<function p at 0x0000005DE307A1F8>
>>> type(p)
<class 'function'>
>>> sorted(lsw, key=lambda e: len(e))
['a', 'x', 'xy', 'aaa']
>>> p2 = lambda e: len(e)
>>> a = 1
>>> type(a)
<class 'int'>
>>> type(p2)
<class 'function'>
>>> p2('xyz')
3
>>> p('xyz')
3
>>> type(p('xyz'))
<class 'int'>
>>> type(p)
<class 'function'>
>>> def add(x,y):
...     return x+y
...
>>> l_add = lambda x,y : x+y
>>> add(2,3), l_add(2,3)
(5, 5)
>>> def add1(x,y=20):
...     return x+y
...
>>> l_add2 = lambda x, y=20: x+y
>>> add1(20), l_add2(20)
(40, 40)
>>> type(add1), type(l_add2)
(<class 'function'>, <class 'function'>)
>>> def (x,y):
  File "<stdin>", line 1
    def (x,y):
        ^
SyntaxError: invalid syntax
>>> lambda add(x,y): x+y
  File "<stdin>", line 1
    lambda add(x,y): x+y
              ^
SyntaxError: invalid syntax
>>> lsw = ['a', 'aaa', 'x', 'xy']
>>> sorted(lsw)
['a', 'aaa', 'x', 'xy']
>>> def p(e):
...     return len(e)
...
>>> sorted(lsw, key=p)
['a', 'x', 'xy', 'aaa']
>>> sorted(lsw, key=lambda e: len(e))
['a', 'x', 'xy', 'aaa']
>>> lsw1 = [ ('XYZ', 1), ('ABC', 2), ('XYZ', 0)]
>>> sorted(lsw1)
[('ABC', 2), ('XYZ', 0), ('XYZ', 1)]
>>> (1,2) < (0,1)
False
>>> (1,2) < (1,3)
True
>>> ('XYZ', 1) < ('ABC', 2)
False
>>> def px(t):
...     return t[1]
...
>>> sorted(lsw1, key=px)
[('XYZ', 0), ('XYZ', 1), ('ABC', 2)]
>>> sorted(lsw1, key= lambda t: t[1])
[('XYZ', 0), ('XYZ', 1), ('ABC', 2)]
>>> def px(int_var):
...     return int_var[1]
...
>>> sorted(lsw1, key=px)
[('XYZ', 0), ('XYZ', 1), ('ABC', 2)]
>>> d = { 'tea' :5, 'coffee': 10, 'colddr': 7}
>>> sorted(d)
['coffee', 'colddr', 'tea']
>>> def vs(k):
...     return d[k]
...
>>> sorted(d, key=vs)
['tea', 'colddr', 'coffee']
>>> sorted(d, key= lambda k: d[k])
['tea', 'colddr', 'coffee']
>>> covid = { 'xyz' : { 'testing': 10, '+ive' : 1},
...           'abc' : { 'testing' : 100, '+ive': 20}
...
... }
>>> sorted(covid)
['abc', 'xyz']
>>> # sort covid based on +ive
>>> k = 'xyz'
>>> covid[k]
{'testing': 10, '+ive': 1}
>>> covid[k]['+ive']
1
>>> def px(k):
...     return covid[k]['+ive']
...
>>> px('abc'), px('xyz')
(20, 1)
>>> sorted(covid, key=px)
['xyz', 'abc']
>>> sorted(covid, key=lambda k: covid[k]['+ive'])
['xyz', 'abc']
>>> #join back at 11:30
>>> "Hello"
'Hello'
>>> "\w\w\w\w\w"
'\\w\\w\\w\\w\\w'
>>> r"\w{5}"
'\\w{5}'
>>> r"\w+"
'\\w+'
>>> "Hello World"
'Hello World'
>>> r"\w+\s\w+"
'\\w+\\s\\w+'
>>> r"\w+\s+\w+"
'\\w+\\s+\\w+'
>>> import re
>>> s1 = "Hello World"
>>> re.findall(r"\w+", s1)
['Hello', 'World']
>>> re.findall(r"Hello\s+(\w+)", s1)
['World']
>>> s2 = "A:B,C;D"
>>> re.split(r":|,|;", s2)
['A', 'B', 'C', 'D']
>>> s3 = "Hello World"
>>> re.sub("World", "Earth", s3)
'Hello Earth'
>>> s4 = "This world world is round round"
>>> re.sub(r"(\w+)\s+\1", r"\1", s4)
'This world is round'
>>> quit()

D:\handson>echo > re_examples.py

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> help(str.join)
Help on method_descriptor:

join(self, iterable, /)
    Concatenate any number of strings.

    The string whose method is called is inserted in between each given string.
    The result is returned as a new string.

    Example: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'

>>> quit()

D:\handson>python re_examples.py
  File "re_examples.py", line 10
    tmp = re.findall(r"age=(\d+), segment) # Loop1: ['20']
                                                         ^
SyntaxError: EOL while scanning string literal

D:\handson>python re_examples.py
Traceback (most recent call last):
  File "re_examples.py", line 10, in <module>
    tmp = re.findall(r"age=(\d+)", segment) # Loop1: ['20']
NameError: name 're' is not defined

D:\handson>python re_examples.py
Name:ABC,age=22;Name=XYZ,age=42

D:\handson>python re_examples.py
Name:ABC,age=22;Name=XYZ,age=42

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import re
>>> s = 'Name:ABC,age=20'
>>> s1 = "Hello World"
>>> re.findall(r"Hello\s+(\w+)", s1)
['World']
>>> re.findall(r"age=(\d+)", s)
['20']
>>> #Lets meet at 1:40 pm
>>> quit()

D:\handson>echo > process_examples.py

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import subprocess as S
>>> command = 'nslookup www.google.com'
>>> proc = S.Popen(command, stdout=S.PIPE, stderr=S.PIPE,
...         shell=True, universal_newlines=True)
>>> outs, oute = proc.communicate()  #stdout, stderr
>>> print(outs)
Server:  dns.google
Address:  8.8.8.8

Name:    www.google.com
Addresses:  2404:6800:4007:802::2004
          172.217.166.100


>>> print(proc.returncode)
0
>>> with open("out.txt", "wt") as f:
...     proc = S.Popen(command, stdout=f, stderr=S.STDOUT,
...         shell=True, universal_newlines=True)
...     proc.wait()
...
0
>>> import glob
>>> glob.glob("*.txt")
['commands.txt', 'DAY1.txt', 'DAY2.txt', 'DAY3.txt', 'installation_jpmc.txt', 'o
ut.txt']
>>> import os.path
>>> os.path.getsize("out.txt")
155
>>> com1 = "type out.txt"
>>> com2 = 'findstr /c:"Server"'
>>> p1 = S.Popen(com1, stdout=S.PIPE, stderr=S.STDOUT,
...         shell=True, universal_newlines=True)
>>> p2 = S.Popen(com2, stdin=p1.stdout, stdout=S.PIPE, stderr=S.PIPE,
...         shell=True, universal_newlines=True)
>>> p1.stdout.close()
>>> outs, oute = p2.communicate()  #stdout, stderr
>>> print(outs)
Server:  dns.google

>>> quit()

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> sys.stdin
<_io.TextIOWrapper name='<stdin>' mode='r' encoding='utf-8'>
>>> a = input("Give Name")
Give Namewe
>>> a
'we'
>>> a = sys.stdin.readline()
we
>>> a
'we\n'
>>> print("OK")
OK
>>> sys.stdout.writelines(["OK\n"])
OK
>>> quit()

D:\handson>echo > complex_handson.py

D:\handson>python complex_handson.py
Traceback (most recent call last):
  File "complex_handson.py", line 4, in <module>
    proc = subprocess.Popen(command, stdout=subprocess.PIPE,
NameError: name 'command' is not defined

D:\handson>python complex_handson.py

D:\handson>python complex_handson.py

Host Name:                 HOME-E402
OS Name:                   Microsoft Windows 8.1 Single Language
OS Version:                6.3.9600 N/A Build 9600
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Standalone Workstation
OS Build Type:             Multiprocessor Free
Registered Owner:          das
Registered Organization:
Product ID:                00262-30226-43084-AAOEM
Original Install Date:     13-07-2014, 12:31:31
System Boot Time:          17-08-2020, 07:51:48
System Manufacturer:       LENOVO
System Model:              20351
System Type:               x64-based PC
Processor(s):              1 Processor(s) Installed.
                           [01]: Intel64 Family 6 Model 69 Stepping 1 GenuineInt
el ~1700 Mhz
BIOS Version:              LENOVO 9ACN25WW, 02-04-2014
Windows Directory:         C:\windows
System Directory:          C:\windows\system32
Boot Device:               \Device\HarddiskVolume2
System Locale:             4009
Input Locale:              en-us;English (United States)
Time Zone:                 (UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi
Total Physical Memory:     8,084 MB
Available Physical Memory: 3,573 MB
Virtual Memory: Max Size:  9,732 MB
Virtual Memory: Available: 4,493 MB
Virtual Memory: In Use:    5,239 MB
Page File Location(s):     C:\pagefile.sys
Domain:                    WORKGROUP
Logon Server:              \\HOME-E402
Hotfix(s):                 305 Hotfix(s) Installed.
                           [01]: KB2899189_Microsoft-Windows-CameraCodec-Package

                           [02]: KB3191564
                           [03]: KB2894852
                           [04]: KB2894856
                           [05]: KB2906972
                           [06]: KB2919355
                           [07]: KB2919442
                           [08]: KB2920189
                           [09]: KB2934520
                           [10]: KB2937220
                           [11]: KB2938772
                           [12]: KB2939471
                           [13]: KB2949621
                           [14]: KB2954879
                           [15]: KB2955164
                           [16]: KB2959626
                           [17]: KB2965142
                           [18]: KB2965500
                           [19]: KB2966826
                           [20]: KB2966828
                           [21]: KB2967917
                           [22]: KB2968296
                           [23]: KB2971203
                           [24]: KB2972103
                           [25]: KB2975061
                           [26]: KB2975719
                           [27]: KB2976627
                           [28]: KB2976978
                           [29]: KB2977629
                           [30]: KB2984006
                           [31]: KB2987107
                           [32]: KB2989647
                           [33]: KB2989930
                           [34]: KB2990967
                           [35]: KB2993100
                           [36]: KB2994290
                           [37]: KB2995004
                           [38]: KB2995388
                           [39]: KB2996799
                           [40]: KB2998174
                           [41]: KB2999226
                           [42]: KB3000850
                           [43]: KB3003057
                           [44]: KB3003667
                           [45]: KB3004545
                           [46]: KB3008923
                           [47]: KB3012199
                           [48]: KB3012235
                           [49]: KB3012702
                           [50]: KB3013172
                           [51]: KB3013531
                           [52]: KB3013538
                           [53]: KB3013769
                           [54]: KB3013791
                           [55]: KB3013816
                           [56]: KB3014442
                           [57]: KB3015696
                           [58]: KB3018133
                           [59]: KB3019978
                           [60]: KB3020370
                           [61]: KB3020393
                           [62]: KB3021910
                           [63]: KB3021952
                           [64]: KB3022345
                           [65]: KB3023219
                           [66]: KB3024751
                           [67]: KB3024755
                           [68]: KB3029606
                           [69]: KB3030947
                           [70]: KB3032359
                           [71]: KB3033446
                           [72]: KB3035126
                           [73]: KB3036612
                           [74]: KB3037576
                           [75]: KB3038002
                           [76]: KB3038314
                           [77]: KB3038701
                           [78]: KB3042085
                           [79]: KB3044374
                           [80]: KB3044673
                           [81]: KB3045634
                           [82]: KB3045685
                           [83]: KB3045717
                           [84]: KB3045719
                           [85]: KB3045755
                           [86]: KB3045999
                           [87]: KB3046017
                           [88]: KB3046480
                           [89]: KB3046737
                           [90]: KB3047254
                           [91]: KB3049563
                           [92]: KB3050267
                           [93]: KB3053863
                           [94]: KB3054169
                           [95]: KB3054256
                           [96]: KB3054464
                           [97]: KB3055323
                           [98]: KB3055343
                           [99]: KB3055642
                           [100]: KB3056347
                           [101]: KB3058515
                           [102]: KB3059317
                           [103]: KB3060793
                           [104]: KB3061493
                           [105]: KB3061512
                           [106]: KB3062760
                           [107]: KB3063843
                           [108]: KB3064059
                           [109]: KB3064209
                           [110]: KB3065822
                           [111]: KB3065988
                           [112]: KB3068708
                           [113]: KB3071756
                           [114]: KB3072307
                           [115]: KB3074228
                           [116]: KB3074545
                           [117]: KB3075853
                           [118]: KB3076949
                           [119]: KB3077715
                           [120]: KB3078071
                           [121]: KB3078405
                           [122]: KB3078676
                           [123]: KB3080149
                           [124]: KB3080800
                           [125]: KB3082089
                           [126]: KB3083325
                           [127]: KB3083711
                           [128]: KB3084135
                           [129]: KB3084905
                           [130]: KB3086255
                           [131]: KB3087038
                           [132]: KB3087040
                           [133]: KB3087137
                           [134]: KB3087916
                           [135]: KB3089023
                           [136]: KB3091297
                           [137]: KB3093983
                           [138]: KB3095701
                           [139]: KB3097992
                           [140]: KB3099406
                           [141]: KB3099834
                           [142]: KB3100473
                           [143]: KB3100773
                           [144]: KB3102429
                           [145]: KB3102812
                           [146]: KB3103616
                           [147]: KB3103688
                           [148]: KB3103696
                           [149]: KB3103709
                           [150]: KB3104002
                           [151]: KB3105216
                           [152]: KB3109103
                           [153]: KB3109560
                           [154]: KB3109976
                           [155]: KB3110329
                           [156]: KB3112148
                           [157]: KB3112336
                           [158]: KB3115224
                           [159]: KB3118401
                           [160]: KB3119147
                           [161]: KB3121261
                           [162]: KB3124275
                           [163]: KB3126030
                           [164]: KB3126434
                           [165]: KB3126587
                           [166]: KB3127222
                           [167]: KB3132372
                           [168]: KB3133431
                           [169]: KB3133690
                           [170]: KB3134814
                           [171]: KB3134815
                           [172]: KB3135449
                           [173]: KB3135782
                           [174]: KB3137728
                           [175]: KB3138378
                           [176]: KB3138602
                           [177]: KB3138615
                           [178]: KB3138910
                           [179]: KB3138962
                           [180]: KB3139398
                           [181]: KB3139914
                           [182]: KB3139929
                           [183]: KB3140185
                           [184]: KB3140219
                           [185]: KB3140222
                           [186]: KB3140234
                           [187]: KB3141092
                           [188]: KB3144756
                           [189]: KB3145384
                           [190]: KB3146604
                           [191]: KB3146723
                           [192]: KB3146751
                           [193]: KB3147071
                           [194]: KB3148198
                           [195]: KB3148851
                           [196]: KB3150513
                           [197]: KB3154070
                           [198]: KB3154132
                           [199]: KB3155784
                           [200]: KB3156059
                           [201]: KB3156418
                           [202]: KB3157993
                           [203]: KB3159398
                           [204]: KB3160005
                           [205]: KB3161102
                           [206]: KB3161606
                           [207]: KB3161949
                           [208]: KB3162835
                           [209]: KB3163207
                           [210]: KB3167685
                           [211]: KB3170106
                           [212]: KB3172614
                           [213]: KB3172729
                           [214]: KB3173424
                           [215]: KB3174060
                           [216]: KB3175024
                           [217]: KB3175443
                           [218]: KB3178539
                           [219]: KB3179574
                           [220]: KB3184143
                           [221]: KB3185319
                           [222]: KB3186539
                           [223]: KB3187754
                           [224]: KB3188128
                           [225]: KB3194343
                           [226]: KB3201860
                           [227]: KB3202790
                           [228]: KB3209498
                           [229]: KB3210137
                           [230]: KB3214628
                           [231]: KB4010250
                           [232]: KB4014329
                           [233]: KB4014505
                           [234]: KB4014512
                           [235]: KB4020821
                           [236]: KB4022730
                           [237]: KB4025376
                           [238]: KB4033369
                           [239]: KB4034662
                           [240]: KB4038806
                           [241]: KB4040972
                           [242]: KB4040981
                           [243]: KB4041777
Network Card(s):           6 NIC(s) Installed.
                           [01]: Realtek PCIe GBE Family Controller
                                 Connection Name: Ethernet
                                 Status:          Media disconnected
                           [02]: Kaspersky Security Data Escort Adapter
                                 Connection Name: Ethernet 2
                                 Status:          Media disconnected
                           [03]: Realtek RTL8723BE Wireless LAN 802.11n PCI-E NI
C
                                 Connection Name: Wi-Fi
                                 DHCP Enabled:    Yes
                                 DHCP Server:     192.168.1.1
                                 IP address(es)
                                 [01]: 192.168.1.5
                                 [02]: fe80::781b:8072:1c14:1ea0
                           [04]: VirtualBox Host-Only Ethernet Adapter
                                 Connection Name: VirtualBox Host-Only Network
                                 DHCP Enabled:    No
                                 IP address(es)
                                 [01]: 192.168.56.1
                                 [02]: fe80::16e:5a85:f171:816d
                           [05]: VirtualBox Host-Only Ethernet Adapter
                                 Connection Name: VirtualBox Host-Only Network #
2
                                 DHCP Enabled:    No
                                 IP address(es)
                                 [01]: 192.168.99.1
                                 [02]: fe80::7c90:7db0:f9c3:6a2b
                           [06]: Kaspersky Security Data Escort Adapter
                                 Connection Name: Ethernet 3
                                 Status:          Media disconnected
Hyper-V Requirements:      VM Monitor Mode Extensions: Yes
                           Virtualization Enabled In Firmware: Yes
                           Second Level Address Translation: Yes
                           Data Execution Prevention Available: Yes


D:\handson>python complex_handson.py
['KB2899189_Microsoft', 'KB3191564', 'KB2894852', 'KB2894856', 'KB2906972', 'KB2
919355', 'KB2919442', 'KB2920189', 'KB2934520', 'KB2937220', 'KB2938772', 'KB293
9471', 'KB2949621', 'KB2954879', 'KB2955164', 'KB2959626', 'KB2965142', 'KB29655
00', 'KB2966826', 'KB2966828', 'KB2967917', 'KB2968296', 'KB2971203', 'KB2972103
', 'KB2975061', 'KB2975719', 'KB2976627', 'KB2976978', 'KB2977629', 'KB2984006',
 'KB2987107', 'KB2989647', 'KB2989930', 'KB2990967', 'KB2993100', 'KB2994290', '
KB2995004', 'KB2995388', 'KB2996799', 'KB2998174', 'KB2999226', 'KB3000850', 'KB
3003057', 'KB3003667', 'KB3004545', 'KB3008923', 'KB3012199', 'KB3012235', 'KB30
12702', 'KB3013172', 'KB3013531', 'KB3013538', 'KB3013769', 'KB3013791', 'KB3013
816', 'KB3014442', 'KB3015696', 'KB3018133', 'KB3019978', 'KB3020370', 'KB302039
3', 'KB3021910', 'KB3021952', 'KB3022345', 'KB3023219', 'KB3024751', 'KB3024755'
, 'KB3029606', 'KB3030947', 'KB3032359', 'KB3033446', 'KB3035126', 'KB3036612',
'KB3037576', 'KB3038002', 'KB3038314', 'KB3038701', 'KB3042085', 'KB3044374', 'K
B3044673', 'KB3045634', 'KB3045685', 'KB3045717', 'KB3045719', 'KB3045755', 'KB3
045999', 'KB3046017', 'KB3046480', 'KB3046737', 'KB3047254', 'KB3049563', 'KB305
0267', 'KB3053863', 'KB3054169', 'KB3054256', 'KB3054464', 'KB3055323', 'KB30553
43', 'KB3055642', 'KB3056347', 'KB3058515', 'KB3059317', 'KB3060793', 'KB3061493
', 'KB3061512', 'KB3062760', 'KB3063843', 'KB3064059', 'KB3064209', 'KB3065822',
 'KB3065988', 'KB3068708', 'KB3071756', 'KB3072307', 'KB3074228', 'KB3074545', '
KB3075853', 'KB3076949', 'KB3077715', 'KB3078071', 'KB3078405', 'KB3078676', 'KB
3080149', 'KB3080800', 'KB3082089', 'KB3083325', 'KB3083711', 'KB3084135', 'KB30
84905', 'KB3086255', 'KB3087038', 'KB3087040', 'KB3087137', 'KB3087916', 'KB3089
023', 'KB3091297', 'KB3093983', 'KB3095701', 'KB3097992', 'KB3099406', 'KB309983
4', 'KB3100473', 'KB3100773', 'KB3102429', 'KB3102812', 'KB3103616', 'KB3103688'
, 'KB3103696', 'KB3103709', 'KB3104002', 'KB3105216', 'KB3109103', 'KB3109560',
'KB3109976', 'KB3110329', 'KB3112148', 'KB3112336', 'KB3115224', 'KB3118401', 'K
B3119147', 'KB3121261', 'KB3124275', 'KB3126030', 'KB3126434', 'KB3126587', 'KB3
127222', 'KB3132372', 'KB3133431', 'KB3133690', 'KB3134814', 'KB3134815', 'KB313
5449', 'KB3135782', 'KB3137728', 'KB3138378', 'KB3138602', 'KB3138615', 'KB31389
10', 'KB3138962', 'KB3139398', 'KB3139914', 'KB3139929', 'KB3140185', 'KB3140219
', 'KB3140222', 'KB3140234', 'KB3141092', 'KB3144756', 'KB3145384', 'KB3146604',
 'KB3146723', 'KB3146751', 'KB3147071', 'KB3148198', 'KB3148851', 'KB3150513', '
KB3154070', 'KB3154132', 'KB3155784', 'KB3156059', 'KB3156418', 'KB3157993', 'KB
3159398', 'KB3160005', 'KB3161102', 'KB3161606', 'KB3161949', 'KB3162835', 'KB31
63207', 'KB3167685', 'KB3170106', 'KB3172614', 'KB3172729', 'KB3173424', 'KB3174
060', 'KB3175024', 'KB3175443', 'KB3178539', 'KB3179574', 'KB3184143', 'KB318531
9', 'KB3186539', 'KB3187754', 'KB3188128', 'KB3194343', 'KB3201860', 'KB3202790'
, 'KB3209498', 'KB3210137', 'KB3214628', 'KB4010250', 'KB4014329', 'KB4014505',
'KB4014512', 'KB4020821', 'KB4022730', 'KB4025376', 'KB4033369', 'KB4034662', 'K
B4038806', 'KB4040972', 'KB4040981', 'KB4041777']

D:\handson>python complex_handson.py
['KB2899189_Microsoft-Windows-CameraCodec-Package', 'KB3191564', 'KB2894852', 'K
B2894856', 'KB2906972', 'KB2919355', 'KB2919442', 'KB2920189', 'KB2934520', 'KB2
937220', 'KB2938772', 'KB2939471', 'KB2949621', 'KB2954879', 'KB2955164', 'KB295
9626', 'KB2965142', 'KB2965500', 'KB2966826', 'KB2966828', 'KB2967917', 'KB29682
96', 'KB2971203', 'KB2972103', 'KB2975061', 'KB2975719', 'KB2976627', 'KB2976978
', 'KB2977629', 'KB2984006', 'KB2987107', 'KB2989647', 'KB2989930', 'KB2990967',
 'KB2993100', 'KB2994290', 'KB2995004', 'KB2995388', 'KB2996799', 'KB2998174', '
KB2999226', 'KB3000850', 'KB3003057', 'KB3003667', 'KB3004545', 'KB3008923', 'KB
3012199', 'KB3012235', 'KB3012702', 'KB3013172', 'KB3013531', 'KB3013538', 'KB30
13769', 'KB3013791', 'KB3013816', 'KB3014442', 'KB3015696', 'KB3018133', 'KB3019
978', 'KB3020370', 'KB3020393', 'KB3021910', 'KB3021952', 'KB3022345', 'KB302321
9', 'KB3024751', 'KB3024755', 'KB3029606', 'KB3030947', 'KB3032359', 'KB3033446'
, 'KB3035126', 'KB3036612', 'KB3037576', 'KB3038002', 'KB3038314', 'KB3038701',
'KB3042085', 'KB3044374', 'KB3044673', 'KB3045634', 'KB3045685', 'KB3045717', 'K
B3045719', 'KB3045755', 'KB3045999', 'KB3046017', 'KB3046480', 'KB3046737', 'KB3
047254', 'KB3049563', 'KB3050267', 'KB3053863', 'KB3054169', 'KB3054256', 'KB305
4464', 'KB3055323', 'KB3055343', 'KB3055642', 'KB3056347', 'KB3058515', 'KB30593
17', 'KB3060793', 'KB3061493', 'KB3061512', 'KB3062760', 'KB3063843', 'KB3064059
', 'KB3064209', 'KB3065822', 'KB3065988', 'KB3068708', 'KB3071756', 'KB3072307',
 'KB3074228', 'KB3074545', 'KB3075853', 'KB3076949', 'KB3077715', 'KB3078071', '
KB3078405', 'KB3078676', 'KB3080149', 'KB3080800', 'KB3082089', 'KB3083325', 'KB
3083711', 'KB3084135', 'KB3084905', 'KB3086255', 'KB3087038', 'KB3087040', 'KB30
87137', 'KB3087916', 'KB3089023', 'KB3091297', 'KB3093983', 'KB3095701', 'KB3097
992', 'KB3099406', 'KB3099834', 'KB3100473', 'KB3100773', 'KB3102429', 'KB310281
2', 'KB3103616', 'KB3103688', 'KB3103696', 'KB3103709', 'KB3104002', 'KB3105216'
, 'KB3109103', 'KB3109560', 'KB3109976', 'KB3110329', 'KB3112148', 'KB3112336',
'KB3115224', 'KB3118401', 'KB3119147', 'KB3121261', 'KB3124275', 'KB3126030', 'K
B3126434', 'KB3126587', 'KB3127222', 'KB3132372', 'KB3133431', 'KB3133690', 'KB3
134814', 'KB3134815', 'KB3135449', 'KB3135782', 'KB3137728', 'KB3138378', 'KB313
8602', 'KB3138615', 'KB3138910', 'KB3138962', 'KB3139398', 'KB3139914', 'KB31399
29', 'KB3140185', 'KB3140219', 'KB3140222', 'KB3140234', 'KB3141092', 'KB3144756
', 'KB3145384', 'KB3146604', 'KB3146723', 'KB3146751', 'KB3147071', 'KB3148198',
 'KB3148851', 'KB3150513', 'KB3154070', 'KB3154132', 'KB3155784', 'KB3156059', '
KB3156418', 'KB3157993', 'KB3159398', 'KB3160005', 'KB3161102', 'KB3161606', 'KB
3161949', 'KB3162835', 'KB3163207', 'KB3167685', 'KB3170106', 'KB3172614', 'KB31
72729', 'KB3173424', 'KB3174060', 'KB3175024', 'KB3175443', 'KB3178539', 'KB3179
574', 'KB3184143', 'KB3185319', 'KB3186539', 'KB3187754', 'KB3188128', 'KB319434
3', 'KB3201860', 'KB3202790', 'KB3209498', 'KB3210137', 'KB3214628', 'KB4010250'
, 'KB4014329', 'KB4014505', 'KB4014512', 'KB4020821', 'KB4022730', 'KB4025376',
'KB4033369', 'KB4034662', 'KB4038806', 'KB4040972', 'KB4040981', 'KB4041777']

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> s = "-1234, KB-1234, OK, WE"
>>> sp = r"(KB)?-\d+"
>>> import re
>>> re.findall(sp, s)
['', 'KB']
>>> sp = r"((KB)?-\d+)"
>>> re.findall(sp, s)
[('-1234', ''), ('KB-1234', 'KB')]
>>> sp = r"((?:KB)?-\d+)"
>>> re.findall(sp, s)
['-1234', 'KB-1234']
>>> s = "-1234, KB-1234, OK, WE, +1234"
>>> sp = r"((?:KB)?[\-\+]?\d+)"
>>> re.findall(sp, s)
['-1234', 'KB-1234', '+1234']
>>>
>>> import re
>>> s1 = "Hello World"
>>> re.findall(r"\w+", s1)
['Hello', 'World']
>>> re.findall(r"Hello\s+(\w+)", s1)
['World']
>>> re.findall(r"Hello\s+\w+", s1)
['Hello World']
>>> #We would join at 3:13 pm
>>> a = 1
>>> dir()
['__annotations__', '__builtins__', '__doc__', '__loader__', '__name__', '__pack
age__', '__spec__', 'a', 're', 's', 's1', 'sp']
>>> dir(a)
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delatt
r__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '_
_floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__g
t__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__in
vert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__ne
g__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdiv
mod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__
', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '_
_rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__',
 '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__'
, 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', '
real', 'to_bytes']
>>> type(a)
<class 'int'>
>>> quit()

D:\handson>echo > MyInt.py

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from MyInt import MyInt
>>> a = MyInt(2)
>>> b = MyInt(3)
>>> a.add(b)
5
>>> print(a)
MyInt(2)
>>> a.value
2
>>> MyInt.__init__(a,2)
>>> MyInt.__init__(b,3)
>>> b.value
3
>>> MyInt.__str__(a)
'MyInt(2)'
>>> b
<MyInt.MyInt object at 0x000000D8C8E62608>
>>> MyInt.add(a,b)
5
>>> add(a,b)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'add' is not defined
>>> quit()

D:\handson>python MyInt.py
5
MyInt(2)

D:\handson>python MyInt.py
5
MyInt(2)

D:\handson>python MyInt.py
MyInt(5)
False

D:\handson>python MyInt.py
MyInt(5)
True

D:\handson>python MyInt.py
MyInt(5)
True
Traceback (most recent call last):
  File "MyInt.py", line 23, in <module>
    d = a.square()
AttributeError: 'MyInt' object has no attribute 'square'

D:\handson>python MyInt.py
MyInt(5)
True
MyInt(4)

D:\handson>#Join at 16:15
'#Join' is not recognized as an internal or external command,
operable program or batch file.

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> a = 1
>>> dir(a)
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delatt
r__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '_
_floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__g
t__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__in
vert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__ne
g__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdiv
mod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__
', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '_
_rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__',
 '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__'
, 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', '
real', 'to_bytes']
>>> a + 1
2
>>> a.__add__(1)
2
>>> lst = [1,2,3]
>>> dir(lst)
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__'
, '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__'
, '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__',
 '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__r
educe__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__'
, '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear',
 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort
']
>>> lst + [1,2,3]
[1, 2, 3, 1, 2, 3]
>>> lst.__add__([1,2,3])
[1, 2, 3, 1, 2, 3]
>>> 2 in lst
True
>>> lst[0]
1
>>> lst[0] = 3
>>> quit()

D:\handson>echo > Complex.py

D:\handson>python Complex.py
8

D:\handson>python Complex.py
Complex(3,5)

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from Complex import Complex
>>> a=Complex(1,2)
>>> b=Complex(2,3)
>>> c=a+b
>>> print(c)
Complex(3,5)
>>> a.re
1
>>> a.imag
2
>>> b.re
2
>>> b.imag
3
>>> a = 1
>>> if a>1:
... print(a)
  File "<stdin>", line 2
    print(a)
        ^
IndentationError: expected an indented block
>>> open("xy")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: 'xy'
>>> class MyException(Exception):
...     pass
...
>>> raise IndentationError("OMG")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndentationError: OMG
>>> raise MyException("OMG")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
__main__.MyException: OMG
>>> def p(x):
...     if x < 0 :
...             raise MyException("x is negative")
...     else:
...             return x+2
...
>>> try:
...     p(-2)
... except MyException as ex:
...     print(ex)
...
x is negative
>>> try:
...     p(2)
... except MyException as ex:
...     print(ex)
...
4
>>> quit()

D:\handson>python ex_example.py
python: can't open file 'ex_example.py': [Errno 2] No such file or directory

D:\handson>python ex_examples.py
Give a number: -3
x is negative
Give a number: -4
x is negative
Give a number: -6
x is negative
Give a number: 20

D:\handson>python
Python 3.7.6 (tags/v3.7.6:43364a7ae0, Dec 19 2019, 00:42:30) [MSC v.1916 64 bit
(AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> 1 + 2
3
>>> quit()

D:\handson>






































































































